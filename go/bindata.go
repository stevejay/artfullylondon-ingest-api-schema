// Package ingestschema Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// schema/basic-types.json
// schema/event.json
// schema/feed-entity-watch.json
// schema/feed-entity.json
// schema/feed-event.json
// schema/image-types.json
// schema/rules-types.json
// schema/venue-status.json
// schema/venue.json
package ingestschema

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _basicTypesJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x58\x7d\x73\xe2\xb6\x13\xfe\x3f\x9f\x42\x3f\xff\xd2\x2b\xf4\xe2\x60\xc8\xf5\x25\x74\x3a\x57\x27\x17\x8e\x5e\x72\x94\x21\x2f\x4c\x8e\x73\x3b\x8a\xbd\x60\x5d\x6c\xc9\x95\x64\x20\x4d\xe8\x67\xef\xc8\x76\x5e\x08\x12\x98\x0b\xbd\xb9\x09\x8c\x9f\xd5\xea\x79\x76\xd7\xab\x15\xb7\x5b\x08\x21\x64\x6d\x0b\x3f\x84\x18\x5b\x4d\x64\x85\x52\x26\xcd\x5a\xed\x8b\x60\xd4\xce\x9f\xee\x32\x3e\xaa\x05\x1c\x0f\xa5\xed\xfc\x58\xcb\x9f\xfd\xdf\xda\x29\x56\x92\xe0\x7e\x95\x68\xd6\x0a\x54\xec\x62\x2e\x87\x69\x14\xdd\xec\x46\x8c\x06\x8c\xd6\xc6\xf5\xda\x15\x16\xc4\xb7\xe5\x4d\x02\x62\x57\x79\xbf\xf7\x10\xc0\x90\x50\x22\x09\xa3\xc2\x6a\xa2\x9c\x50\x06\x24\x58\x86\xa7\x30\x8a\x81\xca\x39\xa0\x58\x25\x7c\x4e\x12\xb5\x4c\xed\xef\xa2\x31\x8e\x52\x40\x32\xc4\x12\x11\x81\x04\x1e\x02\x92\x0c\xa5\x02\x10\x16\x08\xa3\xf3\xde\x09\x52\x0e\x91\x28\x3c\xee\xcc\xfb\x53\xbc\x94\x23\x21\x39\xa1\xa3\xe7\x68\x82\xa5\x04\x9e\xed\xf4\x47\x65\x80\xed\xbf\x1d\x7b\x7f\xf7\xcf\x7f\x9a\xbf\xfe\x6f\xfb\xd5\xb7\x95\xea\x77\xaf\x77\x7e\xfe\xc5\xf6\xee\x2a\xdf\x0c\x1c\x7b\xdf\xb5\x5b\xd8\x1e\x7a\x4f\xbe\x56\xab\xaf\xb7\xad\x07\x8f\xb3\x47\xe7\x16\x50\x49\xe4\xcd\xa2\xbc\xe5\x74\x80\xa6\xb1\xd5\x44\x83\xb9\xa7\x39\x32\x5e\xd4\x96\x01\x63\xa0\x29\x58\x73\xcf\x3d\x2d\xa3\x21\x40\x70\x96\xef\xbe\x21\x4e\x47\x99\xc6\x3e\x96\x7e\xa8\x63\x96\xc3\x65\xa8\x8d\x81\x8b\x3c\xdf\x2b\x8b\x21\xb7\x44\x92\xc4\x20\x24\x8e\x13\x53\xba\x09\x95\x30\x02\xfe\x1c\x8e\x09\x25\x71\xa6\xa7\xae\x65\x92\xa6\x59\xd9\xaf\x15\xa0\xa7\x35\xa4\x6a\x43\x15\xc6\xed\x5e\x63\x66\xa8\x0c\x3c\x5a\x92\x82\x95\xb4\x9d\xe7\x08\x9e\x16\xc8\xfe\xbe\x76\xbb\x00\x4b\xcd\x7e\x0b\x81\x15\x21\xe3\x12\x29\x63\x94\x71\xf9\xea\xb7\x68\xe0\xd4\x1b\xde\xe7\xcf\x41\xfe\xdf\x1e\x38\x75\xaf\xf8\x6c\xec\xa9\x6f\xdb\x0b\xf5\x35\xc5\x71\x12\x81\xd0\xd7\x58\xc3\xa9\xff\x64\x3b\x75\xbb\xfe\xa6\x4c\x21\xa9\xb2\x28\x2d\x56\x19\xbf\x50\x6c\xa5\x90\x77\xd7\xc8\xf5\x55\x9b\xd9\xe7\x9b\xef\xbf\x42\x69\x7d\xaf\xe9\x38\x65\x44\x86\x30\x3d\x64\x11\xe3\x2b\x85\x66\x56\x59\x97\xa4\xa8\xf7\xfe\x00\x85\x30\xcd\xbb\xe9\x0b\xb2\x9b\x37\x3e\xc7\xde\xf7\x6e\x7f\x98\xad\xa9\xb0\xd5\x72\x1c\xd7\x2d\x23\x31\x66\x14\x34\xcd\x73\x21\x91\xca\x4e\x62\x7e\x53\x1c\x12\x84\xa2\x04\xa8\x6f\xd4\xf7\x82\xb7\xab\xee\xa8\x7f\x4b\x5a\xfd\xa9\xc4\x32\x15\x9b\x6b\xae\x1d\x98\x74\x81\x06\x84\x8e\x7a\x30\x26\x30\xd1\x75\xd8\x6e\x7a\x15\x11\x11\xe2\xab\xe8\xb9\xe4\xe7\xf0\xbc\xab\x12\x19\x98\xa8\xae\x0e\xc1\x21\xa3\x52\x7b\x4c\x2f\x97\x15\x13\x7a\x02\x74\x24\x43\x63\xa3\x95\x44\x46\x6b\x1f\x45\xab\xdd\x06\x44\x28\xb9\xc1\x01\x96\x21\x67\x2c\xde\x5c\x3e\xba\x1c\x84\xe1\x08\xee\x30\xb9\x04\x3d\xa7\xd7\x94\x4d\xa8\x61\xa1\x9b\x24\x11\xf1\xb3\x0c\x96\x7a\xf5\xb1\x62\xdd\xc2\x3e\x89\x88\x24\xb0\xc1\x7a\x6b\xe7\xae\x4f\x18\x4b\x84\xb6\x98\x30\x97\x04\x47\xab\xcc\x3a\x6c\x95\xc5\x26\xe3\x31\x09\x01\x22\x3f\xc4\x84\xbb\xbe\x0f\x62\x83\xe1\x68\xa5\x51\x54\xf8\x34\x07\xc3\x6c\xd0\x61\x66\x6c\x93\x01\xc0\x1c\xf0\xef\xc3\x93\x6c\x16\xdf\x9c\xf8\x43\xa0\x92\xe3\x48\xc7\xb0\x0f\xc2\xf0\x0e\x70\xa9\x9f\x02\xb1\x7e\xc1\x29\x4b\x65\xb8\x14\xcc\xb6\x2a\x11\x83\x94\x47\xeb\x4a\x1f\x32\x1e\x63\xd5\xd5\xac\x94\x13\xfd\x98\x96\x5e\x77\x99\x90\x3e\x0b\xd6\xee\x52\x73\x03\x42\xe5\xfd\x6f\x3d\xf4\xca\x71\xdd\xea\x5d\xa5\x52\x19\xb8\x76\xb7\x67\x9f\xf7\x2f\x3f\x79\x03\xd7\x6e\x1f\xdb\x97\xde\x5b\x35\x32\x66\x77\x0a\xef\xad\xb2\x79\x6a\x92\x21\xae\xdd\xfe\x70\x7c\x7a\x76\x7e\xd1\xf7\xaa\x77\x3a\x0f\x85\xd9\xc1\x51\xfb\x63\xa7\xdb\xbb\xb0\x2f\xbd\x6a\xb5\x8a\x6e\x9d\x9d\xd9\x3d\xf2\xce\x6e\x7f\x38\xe9\x74\xed\xf3\xbe\xfd\xc9\xbb\x6d\xcc\xaa\x55\xc3\x6c\x1a\xe0\x0d\x5e\x59\x3e\x32\xaa\xfc\x69\xd2\x7b\x96\x82\x30\x40\x7d\x08\xa8\x11\x3c\x0b\x53\x6e\xc2\x5a\x9c\x18\x90\x53\x2c\x53\x6e\xc2\xd2\x8c\x63\x89\x2a\x53\xa3\x71\xd6\xe5\xd7\x3e\x0c\xcd\x11\x3a\xc0\xf4\xba\xcd\x22\x45\x5c\xdb\x29\x9e\xe0\x7d\x80\x6b\xa0\x81\xd6\xec\x30\xe4\x44\xc8\x18\x8b\xa3\xb1\x76\x0e\x78\xc0\xdf\xe9\x83\x70\xc0\xa6\x84\x8e\x0c\x60\x07\x26\x97\x80\xb9\xc9\xf7\x3d\x6c\x58\xfd\xb0\x75\x17\x38\x61\x81\xa9\x41\x00\x2f\x12\x61\xc4\x8b\x30\x98\xdd\xb8\xe9\x28\x15\xf2\x3e\xd7\xda\x38\xe5\x26\x3a\xa4\xc7\x44\xd8\xc6\x22\xc4\x14\x6b\x9b\xd8\x25\x8b\x8f\x49\x92\xa4\xbc\x4c\xa5\x24\x9c\x89\x25\x4d\x83\x5d\x7d\x01\x7f\xe1\x67\x8a\x84\xb3\x04\xb8\xf6\x48\x47\xf9\xe8\x13\x83\xf6\xf6\xfe\xe8\xbf\x98\xa8\xac\xb3\xc5\x2b\xcd\x02\x09\x6d\xa5\x3e\x58\x19\x2b\xf6\xd1\x0f\x4c\x65\x2d\x89\x30\xd1\x1d\x63\xf3\x56\xa1\x8c\x23\x4b\x6b\xe3\x2d\x3c\x9d\xe9\x7e\xe0\xc8\x6e\x2c\xab\x65\x5f\x68\x6e\x36\x8f\x56\xa5\x74\xeb\xe7\xcb\x65\xe4\x7c\x0e\x01\x59\xec\x08\x8b\xec\x0e\x73\xc3\xff\x92\xde\xd6\x12\xb2\x16\x87\xbf\x52\xc2\x21\xd0\x37\xa2\x87\xea\x32\xc6\xdf\x54\xf7\x5b\xf9\xdf\xd9\xbf\x01\x00\x00\xff\xff\x02\xa5\x96\xe4\x70\x14\x00\x00")

func basicTypesJsonBytes() ([]byte, error) {
	return bindataRead(
		_basicTypesJson,
		"basic-types.json",
	)
}

func basicTypesJson() (*asset, error) {
	bytes, err := basicTypesJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "basic-types.json", size: 5232, mode: os.FileMode(420), modTime: time.Unix(1569497831, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _eventJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\x4f\x73\xdb\x28\x14\xbf\xe7\x53\x30\x6e\x0f\xdd\x99\x4d\xbc\x3d\xed\x4c\x6e\xd9\x24\xed\x7a\x26\xdd\x64\x62\xb7\x3d\xec\xe4\x80\x25\x2c\xd3\x48\xe0\x05\x94\xc6\xb3\x93\xef\xde\x01\xfd\x45\x02\x84\x54\xdb\x71\x52\xfb\xd4\x8a\xf7\xe0\xfd\x1e\x8f\x1f\xef\x01\xf9\xff\x08\x00\x00\x46\x6f\x79\xb0\x44\x09\x1c\x9d\x82\xd1\x52\x88\xd5\xe9\x78\xfc\x8d\x53\x72\x9c\x7d\x3d\xa1\x2c\x1a\x87\x0c\x2e\xc4\xf1\x1f\x7f\x8e\xb3\x6f\x6f\x46\xbf\xe7\x9a\x38\x2c\xb4\xf8\xe9\x38\x6f\xe5\x27\x90\x89\x45\x1a\xc7\xeb\x93\x98\x92\x90\x92\xf1\xc3\xfb\x31\x7a\x40\x44\x9c\xc8\x7e\x0b\x5d\xb1\x5e\x21\xa9\x4c\xe7\xdf\x50\x20\x8a\xaf\x21\x5a\x60\x82\x05\xa6\x84\x8f\x4e\x41\x66\xa0\x6a\x50\x1d\xcc\x32\x9d\xea\xb3\xd6\x13\x17\x0c\x93\x28\xef\xa9\x52\x24\x69\x32\x3a\x05\xff\x6a\x5f\x55\xcb\xe5\xe3\x12\xcf\xd5\x58\x0d\x1d\xd5\x7a\x83\xd8\x82\xb2\x04\x92\x00\x8d\xb4\xd6\xbb\xf2\x7f\x4f\x95\xda\x08\x46\xe8\x02\x09\x88\x63\x6e\x37\x50\x83\x5a\xb6\xae\x18\x5d\x21\x26\x30\x6a\x6b\xaa\xf6\x04\x93\xb3\xa8\x0d\xbb\xea\x1d\x8b\x58\x75\xff\x09\x13\x9c\xa4\x09\x38\x8b\x10\x78\x77\xf9\x18\xc4\x69\x88\x49\x04\x3e\xa6\x90\x85\x18\x12\xfe\x9b\x01\x66\x66\x7b\x1c\x5f\x2f\x8c\x3e\x2a\x7e\xe6\xa1\xcb\x0e\xde\x32\x24\xf5\x47\x73\xc8\x71\x70\x2c\xe1\x72\x35\xd7\x6f\xc6\xb5\xf9\x1c\xc3\xa8\xe1\xc9\xfa\xef\xc9\xd8\x72\xd7\xfa\xfa\x64\x98\xaa\x04\x3e\x7a\x7a\x08\x3e\xfe\x02\x1e\xd2\xbe\x34\xfc\x35\x82\x61\xa8\x06\x83\xf1\x4d\x3d\xee\x16\x30\xe6\xa8\x21\xca\xd0\x7f\x29\x66\x28\x34\xaf\x9e\x3c\x2c\xed\xd3\xe1\xb1\x68\x02\xca\xc5\x96\x56\x8d\x30\x51\x45\xd5\x5a\x44\xc4\x39\xe5\x02\x28\x5a\xb1\xcc\xbc\x93\x5c\x4a\x29\x2b\xc9\x94\x12\x1f\x18\xb2\x8d\xa1\xda\x6f\x20\x0e\x5d\xed\x9f\xc9\x3d\xa1\xdf\x89\x39\x3c\x7a\x07\x81\x35\x9c\x2d\xfe\xc2\x0b\xab\x2f\x81\xc7\x6c\x68\xb2\xce\x99\xd1\x24\x03\x4a\xb8\x90\xce\x57\xce\x71\xca\x9b\x17\x87\xbd\xc5\x40\x23\x99\x71\x4b\x44\x36\x07\x35\xc1\x44\x06\x98\x1f\xda\x16\x8f\x2b\x55\x7b\x48\x94\x8a\xdd\xe4\x54\xff\x75\x5b\x52\x76\xec\x47\x5a\x09\x25\x68\xed\x9e\x9d\xe2\x67\x9f\xa5\xe2\xd7\x8e\x64\x4d\xdf\xed\x0d\xc9\x3c\x43\xfc\x9d\xef\x0a\x07\x7f\xfb\xeb\x5b\x56\x55\x07\x0f\xdd\xf5\xda\x61\x14\x51\x78\xec\x22\x73\x4a\xef\x31\x89\x9e\x77\x23\xf9\x2b\x33\x62\x27\x7b\xc9\x3f\x54\xdc\x16\x9e\x73\x6c\x19\x3e\x32\xbf\xf4\xb6\x52\x3a\xe8\x05\x6e\x2d\x21\x14\x28\x8f\xb9\xeb\x15\x22\xdd\x1a\x40\x0b\xd7\x0b\x28\x10\x28\x62\x36\xeb\x60\xff\x99\x4f\x62\x3e\x10\x5f\x45\x7c\xab\xaa\x44\xdd\x12\xf9\x61\xfe\x95\xb2\x7b\xbe\xa4\x2b\x0f\x0a\x9c\x70\x50\x4a\x77\x30\xe0\x9c\xd2\x18\x41\x03\xed\x98\xca\xbb\x1a\x4c\x7b\x98\x57\x66\xdc\xd4\xc5\x3b\xec\x80\x8c\xc1\xb5\x4d\x08\x0b\x94\xb8\xd7\x95\x71\x50\x17\xdd\x3a\x67\x43\x07\xdd\x93\x0b\x7a\xae\xff\x9a\xbd\x40\x72\xc1\x61\xf5\xd7\xf5\x3b\xd2\x4c\x81\x93\x9f\xf1\xf7\x4c\xaa\xef\xbf\xbf\x15\xca\xbd\xf0\x37\xe6\x53\x1a\x87\xd7\x69\xdf\xc4\x7e\xc2\x41\xdd\xef\xb2\x13\x20\x7b\xf1\xf0\x7d\x27\x51\xf5\xb3\xff\x5c\x1a\x10\xc7\x8a\xf0\x7f\x02\x41\xd5\xcd\xae\x21\x08\x18\xf5\x4d\x31\x6a\x86\x1f\x4f\x57\x28\xc0\x0b\x1c\x80\x99\xec\x67\x1f\x62\xbf\x11\xeb\xd2\xac\xe7\xce\x2c\x1c\xbb\x81\xff\xa9\x9d\xa6\xe6\x4c\x33\x34\xc9\xb0\x7b\x0f\xc8\x68\xcf\x7b\xa9\xf6\x58\x13\x56\x49\xb3\x2b\x6d\x09\x76\x82\xc9\x24\xdf\xb2\xdf\xf7\xad\x5c\x36\x75\x2a\x5a\x4b\x98\x3c\x12\x38\x54\xde\x40\x58\xf3\x37\x4a\x50\xbf\x9a\xca\x2b\xc5\xf0\x4d\x2f\x54\x5c\x7c\x60\x34\xf1\xa8\xbf\xb4\xd2\x42\xea\x80\x77\x13\x12\xc4\x29\xc7\x0f\xc8\x76\xb0\x5e\x6a\xfb\xaf\x77\xbf\xb5\xbe\xd1\x9c\xc2\xbd\xe6\xed\xeb\xdd\xb5\xa2\xe5\xc8\x33\xda\xd7\xad\x33\x7a\x70\xaa\xc3\xa9\x29\x47\x5f\x10\x49\x91\x2c\x68\x31\x89\x64\xa2\xe5\x73\x72\x50\xb8\xf8\x33\x47\x40\xe9\x83\xbc\x03\x90\xf5\xd0\xe1\xe6\xe2\x3c\x41\xb0\x14\x0d\x32\x7b\x09\xb9\x1c\x28\xbc\x24\x82\xad\x7b\xd8\xfb\x37\xe4\xca\xc2\x10\x64\x9a\x5d\xfc\xed\x9b\x10\xf4\x3b\xd7\xe8\xbf\x37\xf9\xed\x4b\x15\xf7\x74\x2f\xa3\xbe\x31\xe1\x3d\x19\x46\x39\xaf\x5b\xc9\x03\x3d\xbb\x3a\xdc\x77\x26\x39\xd0\xf3\xab\xa3\x67\x45\x48\xaf\x83\x9f\x1d\xb6\xd2\xcc\x35\xb7\x69\xdc\xcb\xb7\x85\x47\x33\xbd\xe7\x0a\x5c\x26\x47\xb7\x06\xae\x06\xed\x59\x02\x38\x88\x29\x1f\xe0\xdc\xf3\x4c\x6d\xaf\x9d\xab\x41\xdb\x9e\x73\x07\x66\x16\x45\x5d\xf7\x3a\x92\x0a\xdf\xe5\xeb\x9b\x7c\x78\x54\x9a\xc6\xf3\x1b\xe7\x31\xb8\xe3\xf8\xbb\x8a\xec\x19\x34\x5d\x63\x76\x27\x39\x3e\x09\x4e\xf7\x8d\x9e\x66\x87\xeb\xe6\x15\x78\xdf\xbe\x02\xaf\x1b\x58\x25\x75\x96\x86\x18\xb9\xcf\xfb\x95\xdc\x27\x14\xe2\xd4\x15\x6f\x4a\x6a\x2a\xd6\x71\x67\x57\x1f\x11\xdd\xd4\x61\x09\x8f\xd3\xa8\x87\x73\xa7\x52\xdc\x75\x40\xe5\xc5\x5a\x1e\xc7\x87\x7e\x39\xcc\x0a\x8a\xe5\x14\x45\x09\x22\x62\xe8\xe5\x6d\x3f\x77\xc5\x70\x8e\xe2\x1e\xfe\xba\x52\xf2\x1b\x89\xc6\x04\x93\x2b\x44\x22\xb1\x34\x9e\x6b\x01\xf3\xed\xa3\x61\xc9\xf5\xab\xd3\xba\xe9\x34\x83\xe0\x0a\x2f\xa7\x2f\x5b\x6d\xfa\x84\x34\x4f\xe8\x8c\x87\x7b\x19\xf0\x5c\xd4\xc6\x29\xa3\x07\xc9\xd4\x93\xf6\xd1\x7b\x35\x63\x59\x56\x39\xb9\x68\x52\x60\xef\x07\x0d\x1b\x88\x5e\x1f\x36\x57\x88\x2e\x89\xc0\x62\xed\x81\x2b\x13\x7c\x51\xf0\x18\xc7\xb4\xfd\x58\xa2\x02\x76\xf9\x80\x88\x00\x5f\x72\xb9\xdd\xc0\x2a\xac\x1a\x04\x09\xa9\x39\x98\x0a\x28\x52\xd3\x3e\x5c\xe2\xca\xa6\x2a\x97\xdb\x0d\x2e\xcd\xb4\x61\xe0\x1c\x6f\xf3\xf5\x19\x33\xec\xd1\xc3\x61\x35\x60\x94\x46\x0c\xc2\x90\xb2\x36\xbd\xd7\x4a\xcf\xdb\xab\x1d\xcd\x86\xb4\x63\x58\x86\x97\xdb\x6a\x83\x30\x53\xff\xd8\x0d\x88\x6c\xd0\x41\x30\x78\x9a\x24\xd0\x50\x65\x57\x40\xa6\xb9\xc4\x8e\xc8\x8c\x51\x3e\x10\x8a\xf3\x4f\x42\x0a\x34\x67\x11\x02\x85\xd4\x76\x16\x46\xcd\x8c\x41\x30\xdc\x8f\xf4\xb5\x87\xf4\xdb\x05\x52\x37\x64\x10\x92\xce\x87\xa2\xcd\xc7\x9c\xdb\xc5\xd3\x30\x67\x10\x24\xaf\x27\x60\xc6\x47\x3f\x5b\x85\x66\x30\x6b\xd8\xce\xd2\x7d\x41\x5a\xed\x30\xa5\xec\x96\xc1\xb5\x8d\x1a\x84\x0d\x27\x30\x32\x94\xbf\xb5\xc7\x1f\x99\xc0\xa6\x40\xa8\xf1\xac\x3c\x97\x5b\x33\x6c\xeb\x31\x1f\x2e\xd4\xea\xa1\x6d\x4d\x85\xf9\xdd\x86\x17\xab\xa5\x8c\x21\x22\xbe\x42\x11\x2c\x51\x78\x4e\x89\x90\xe9\xaa\x83\xdf\x32\x79\x90\x2b\x80\x42\x63\x37\xbb\xd0\x77\xdd\xcc\x61\x54\x91\xce\x63\xcc\x97\x28\xf4\xc6\x7c\x53\x68\xbc\x34\xd4\x47\x35\xec\x1e\x75\xaf\xc1\xfe\x86\x4b\x2c\x0f\xd5\xbd\x8e\xb1\xec\xd9\xb1\x26\x56\xfd\xb1\x93\xed\x0f\x4f\xcd\xb0\xdb\x5f\x9a\xa5\xb3\xf5\xe1\xb9\x47\x8d\x5f\xd4\xce\x96\x52\x5e\x2f\x44\xad\x42\xa6\x32\xad\x6c\xd6\xea\x0f\x9b\x4c\xe9\x43\x8b\x80\x4c\x9b\x6d\x6f\x7d\x0d\x89\x6f\xd9\x58\x4b\x8e\x2c\x12\xf5\xac\xc3\x22\xd2\xd8\xc8\x6d\x77\xba\xed\x3d\xd1\x36\xa4\x91\x9b\x5a\xb2\x8d\x03\x13\xd3\xa2\x7f\xc6\x30\xae\xfd\x75\xf5\x21\x8a\x73\x99\x57\x10\xc5\xed\xe4\x67\x4b\x41\x7c\x94\xb5\x3e\xfd\x08\x00\x00\xff\xff\xf7\x8b\xc8\x9c\xa5\x40\x00\x00")

func eventJsonBytes() ([]byte, error) {
	return bindataRead(
		_eventJson,
		"event.json",
	)
}

func eventJson() (*asset, error) {
	bytes, err := eventJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "event.json", size: 16549, mode: os.FileMode(420), modTime: time.Unix(1569497831, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _feedEntityWatchJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x95\xdf\xeb\xda\x30\x14\xc5\xdf\xfd\x2b\x42\xbe\x7b\xb4\xcd\xf6\x34\xe8\xeb\x7e\x80\x30\xd8\xd8\x9c\x3e\x0c\x1f\x62\x73\x6b\x23\x31\xe9\x92\x5b\x87\x88\xff\xfb\x48\xd2\x4e\xab\xad\x13\x07\x85\xf9\x24\xa7\x27\xf7\x9e\xcf\x6d\x7b\x7b\x9c\x10\x42\x08\x7d\xe5\xf2\x12\x76\x9c\x66\x84\x96\x88\x55\xc6\xd8\xd6\x19\x9d\x44\x35\x35\x76\xc3\x84\xe5\x05\x26\xaf\xdf\xb2\xa8\xbd\xd0\x69\x73\x52\x8a\xf6\x94\xcb\x58\x73\xd5\xa5\xdc\x62\x51\x2b\x75\x48\x95\xd1\xc2\x68\xb6\x7f\xc3\x0a\x00\x91\x80\x46\x89\x87\xe4\x17\xc7\xbc\x4c\x7d\x8f\xb6\x0e\x1e\x2a\xf0\x85\xcc\x7a\x0b\x39\xb6\x6a\x65\x4d\x05\x16\x25\x38\x9a\x91\x98\x35\xe8\xbe\xd6\x3c\x9e\x38\xab\xb1\x8e\x44\x15\x0a\x7d\x04\x10\x24\x78\xa6\x5d\x47\x6e\xb4\x43\xef\xf8\x10\xb2\x2c\x7d\x14\xfa\xc7\x72\x3a\xbb\x69\x0c\x7b\xa7\x47\xac\xd0\xdb\x85\x2b\xf5\xb9\xa0\x19\xf9\xd1\x91\xfd\xef\x78\xa3\xc4\x41\x5a\xf0\x7e\xba\xe6\x4e\xe6\x89\x1f\x87\x0b\x03\x7a\x61\x02\x0a\xa9\x25\x4a\xa3\x1d\x6b\x22\xdd\x94\x38\x75\x94\x55\x2f\xce\x1e\x74\x0d\x33\x71\x87\x67\xe1\x1d\x64\xf6\x7e\x24\x98\x8a\x63\xf9\x0d\x36\x3b\xd0\xf8\x0f\x44\xf1\x26\x3c\xc0\xd5\xdc\xad\xff\x09\xcf\x3a\x69\xf4\x5f\xc1\x16\x8d\x6f\x1c\xac\x36\xd5\x53\x48\xb5\x55\x77\x70\xbe\x7f\xfd\x34\x12\x84\xcf\xf1\x14\x40\x9b\x75\x08\x61\x1e\xfe\x8c\x03\x11\x9b\x3e\x85\x11\x16\x30\x88\x77\x46\xa3\x7f\x3c\x87\x79\x96\xd1\x48\x5a\xe7\x38\x64\x57\xf1\x1e\x47\x9c\x5c\x80\x52\x0b\x3f\x6b\x69\x41\x74\xf2\x9d\xbf\x1d\xb7\x9b\xbe\x67\x59\x0e\x6e\x9b\x9e\xf7\xf4\xea\x39\x1f\x1e\x77\xb8\xb0\x6a\x52\x72\x21\x02\x35\x57\x5f\x2e\xbf\x76\x05\x57\x0e\x26\xa7\xdf\x01\x00\x00\xff\xff\xcd\xbe\x14\x7e\xa1\x07\x00\x00")

func feedEntityWatchJsonBytes() ([]byte, error) {
	return bindataRead(
		_feedEntityWatchJson,
		"feed-entity-watch.json",
	)
}

func feedEntityWatchJson() (*asset, error) {
	bytes, err := feedEntityWatchJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "feed-entity-watch.json", size: 1953, mode: os.FileMode(420), modTime: time.Unix(1569497831, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _feedEntityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x54\xc1\x6e\xa3\x30\x10\xbd\xe7\x2b\x2c\x67\x8f\x01\x6f\x4e\x2b\x71\xde\x5d\x29\x52\x56\x2b\x6d\xb6\xb9\x54\x3d\x38\x78\x00\xa7\xc4\xa6\xf6\x10\x29\x8a\xf2\xef\x95\x31\x84\x52\x52\x1a\xa5\x15\x52\xb9\xf1\xfc\xe6\xf9\x3d\x86\x99\xe3\x84\x10\x42\xe8\x37\x1b\x67\xb0\xe3\x34\x22\x34\x43\x2c\x22\xc6\xb6\x56\xab\xc0\xa3\xa1\x36\x29\x13\x86\x27\x18\x7c\xff\xc1\x3c\x36\xa5\xb3\xba\x52\x8a\xa6\xca\x46\xac\x3e\xb5\x21\x37\x98\x94\x79\x7e\x08\x73\xad\x84\x56\x6c\x3f\x67\x09\x80\x08\x40\xa1\xc4\x43\xe8\xd4\x1b\x05\x3c\x14\xe0\x24\xf4\x66\x0b\x31\x36\x68\x61\x74\x01\x06\x25\x58\x1a\x11\xef\xb2\xc2\x9d\xca\x7f\x5f\xd1\xa2\x5e\x47\x62\x5e\x09\xfd\x06\x10\xa4\xe2\xcc\xba\x0c\x9e\xe7\x7f\x13\x1a\x91\xfb\x0e\xec\x9e\x63\x0f\xf1\xe1\x0c\x38\x3e\xdd\x70\x2b\xe3\xc0\x19\xb5\x95\xf5\x29\x13\x90\x48\x25\x51\x6a\x65\xd9\xd9\x52\x4f\xe4\xd4\x41\x1e\xce\x6f\xa7\xd6\x18\xf5\x5f\x64\x20\xce\xaf\x8a\x30\x66\xa0\xda\xd2\x4d\x71\xf6\xa0\x4a\x58\x88\x81\x3c\x6b\xc7\x20\x8b\x9f\x23\x85\x29\x38\x66\x2b\x48\x77\xa0\xf0\x03\x89\x7c\x13\xae\xc8\x55\x77\xeb\x2b\xc5\x33\x56\x6a\xf5\xfe\x0f\xb8\xae\x89\xe3\xe4\x6a\x6c\xdd\x36\x53\xc6\x68\x33\x94\xc8\x9d\x93\x3f\x60\x2d\x4f\x7b\x43\xd5\xec\x23\x8b\x46\xaa\xf4\xf5\xe9\x4e\xaa\x25\xa8\x14\x33\x1a\x91\xf9\xc5\xcb\x2d\xf2\xf8\x11\x0d\x8f\x87\x76\x94\x77\xb0\x6a\xa9\x9f\x6c\xa2\x34\xf9\xc0\xed\x77\xff\x96\x23\xb5\xd1\xf9\xb8\xbe\x85\x93\x17\x31\xa8\x81\xa7\x52\x1a\x10\x1d\x53\xed\xfe\xef\xaf\xd0\x0b\x5b\xe8\xcd\x31\xbe\x30\x00\x13\x6f\xe6\xf4\x1c\x00\x00\xff\xff\x58\x07\x65\xe8\x13\x07\x00\x00")

func feedEntityJsonBytes() ([]byte, error) {
	return bindataRead(
		_feedEntityJson,
		"feed-entity.json",
	)
}

func feedEntityJson() (*asset, error) {
	bytes, err := feedEntityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "feed-entity.json", size: 1811, mode: os.FileMode(420), modTime: time.Unix(1569497831, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _feedEventJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x97\xcf\x6f\xdb\x20\x14\xc7\xef\xf9\x2b\x90\xbb\x63\x12\x6f\xa7\x49\xb9\x6d\x6b\x27\x45\xaa\xb4\xaa\x4d\x7a\x99\x7a\x20\xf6\xb3\x43\x67\x83\x07\x24\x5a\x54\xe5\x7f\x9f\x80\xf8\x57\x6c\x88\x85\x56\x4f\xd3\x9a\x53\xf4\xde\xd7\xcf\xdf\x0f\x3c\x0c\xbc\x4c\x10\x42\x28\x78\x27\xa2\x2d\xe4\x38\x58\xa0\x60\x2b\x65\xb1\x08\xc3\x67\xc1\xe8\xcc\x44\xe7\x8c\xa7\x61\xcc\x71\x22\x67\xef\x3f\x86\x26\x76\x15\x4c\x4f\x4f\x92\xb8\x7c\x4a\x2c\xc2\x53\x56\xcc\x31\x97\xc9\x2e\xcb\x0e\xf3\x8c\xd1\x98\xd1\x70\xff\x21\x4c\x00\xe2\x19\xec\x81\xca\xb9\x2a\x5e\x16\x90\x87\x02\x54\x05\xb6\x79\x86\x48\x96\xd1\x82\xb3\x02\xb8\x24\x20\x82\x05\x32\x26\x75\x5c\x15\x59\x99\x27\xea\xa8\xa9\x43\x64\xa6\x0b\x7d\x05\x88\x91\xd6\x4c\xdb\x8a\x88\x51\x21\x95\xe2\x86\x4a\x22\x0f\x41\x95\x3d\xd6\xc2\x00\x4c\xce\x5e\xde\x3c\xec\x7e\x81\xa6\xec\xaf\xbf\x07\xba\x83\x65\xec\x78\xc1\xa3\x52\xa0\xe5\xf5\x79\x75\x9c\x65\xdf\x92\x60\x81\xbe\xb7\xc2\xea\xf7\xd2\x89\x98\xa9\xe1\xa0\xf4\xc1\x06\x0b\x12\xcd\xd4\x38\x0b\x3d\xf2\x57\x61\x0c\x09\xa1\x44\x12\x46\x45\x58\x60\xb9\x7d\x80\x34\x6f\x39\xae\x9c\xb7\x22\x4f\x76\x22\x33\x2a\x03\xb8\x4e\xc3\xf7\x2f\xe1\x71\x41\x18\x75\x75\x84\x9a\x6d\xf4\x78\xd2\x8d\x83\x55\xba\xf2\x42\xd2\xed\x79\x61\x15\x19\xa8\xbe\x2e\xf7\x26\xaa\xd7\x7e\x9b\xa5\xb6\xe3\x45\xb3\xe3\x99\x83\x63\x7d\x7f\x3b\xd2\x94\x28\x1f\x5e\x00\xa5\x57\x1b\xc2\x4a\xff\x19\x07\xc2\xbc\xd4\x0b\x43\xec\xf2\x1c\x73\xd7\xa7\xf3\xe1\xa4\x18\x69\xe5\x73\x26\x3c\x51\x70\x0a\xd7\x20\x31\xc9\x84\x83\xe6\x53\x0a\xa8\x54\xbd\xf6\x12\x69\x18\xf2\x02\x8a\x98\x90\x97\x89\xbe\x30\x21\x47\x43\x6a\x5a\xf2\x62\xda\x30\xf6\x83\xd0\xf4\x32\xd6\x67\x23\x1c\x8d\xec\xcc\x98\x17\x5c\x01\x3c\x61\x3c\xc7\x34\x1a\xd0\x89\x77\xb5\x78\x34\xc8\x1e\x83\x7e\x7b\xd1\xaf\x2d\xd9\xe8\x9a\x97\x39\x6f\x2a\xed\x68\x98\x5d\x7b\x5e\x94\x24\xc7\x29\xac\xb9\x93\x6e\xa9\x34\x68\x7d\x7f\xfb\xe7\xa8\xf4\x6b\xad\x1f\xc8\xda\x94\xdf\xb6\x85\x53\x17\xce\x4a\xa5\x5f\x7b\x7a\xb4\x87\xe1\xee\x27\x0d\x86\x00\xc7\xb1\xae\x82\xb3\xbb\xe6\x65\x23\xc1\x99\x80\x52\xd2\xf1\x7b\x46\x4b\x92\xce\x08\x20\xc7\xf5\xa5\xa5\xb1\x9f\xc2\x5a\xb2\xea\x52\xd1\x58\xe5\x5d\xe4\x2e\x76\x37\x72\x3c\x9b\x0d\xb9\x85\xee\xb1\x56\x67\x38\xfc\xdc\x11\x0e\x71\xef\x54\xa1\xd6\x3d\x6c\x6a\x81\x33\xd7\x28\x4b\xb6\xbc\x04\xb9\xd2\xd5\x8d\xc2\x2a\xea\x3b\x6f\xd7\x06\xaa\xd1\xb5\x08\xd4\x71\xcd\x92\x92\x3d\x07\xae\x2a\xd9\xd8\x8a\x2d\x8a\xe6\xce\x66\x91\x9c\x6d\x11\x16\xd5\x90\x6f\xec\x53\x7b\x8a\xfb\x56\xea\x5f\xec\xd9\xfa\x8b\xfd\xd6\xb2\xff\x45\xcb\x0e\xd8\x2f\xad\x1d\x3b\x31\xd9\xe3\xef\x00\x00\x00\xff\xff\x0f\x9e\x9d\x9a\x94\x12\x00\x00")

func feedEventJsonBytes() ([]byte, error) {
	return bindataRead(
		_feedEventJson,
		"feed-event.json",
	)
}

func feedEventJson() (*asset, error) {
	bytes, err := feedEventJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "feed-event.json", size: 4756, mode: os.FileMode(420), modTime: time.Unix(1569497831, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _imageTypesJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x54\x4b\x6f\xe2\x30\x10\xbe\xf3\x2b\x2c\xc3\x71\x89\xe1\xb4\x52\xae\xcb\x05\x69\xa5\x5d\x21\x71\xaa\x38\x18\xec\xc0\x20\x3f\xd2\xb1\x53\x15\x55\xf9\xef\x95\xe3\xf0\x76\xa2\x52\xb5\x52\x39\x70\x98\xef\x31\xdf\xd8\xe3\xbc\x0d\x08\x21\x84\x8e\xdc\x66\x27\x35\xa7\x39\xa1\x3b\xef\xcb\x9c\xb1\xbd\xb3\x66\x1c\xab\x99\xc5\x2d\x13\xc8\x0b\x3f\x9e\xfc\x66\xb1\x36\xa4\xbf\x5a\x25\x88\xa3\xca\xe5\xac\x45\x5d\xc6\xd1\x17\x95\x52\x87\x4c\x59\x23\xac\x61\x2f\x53\x06\x9a\x6f\xe5\xd8\x1f\x4a\xe9\xb2\xe0\x7e\x74\x10\xb2\x00\x03\x1e\xac\x71\x34\x27\x31\x50\x03\x34\x82\x25\xaa\xeb\x72\x03\x05\x97\xd0\x96\x23\xf2\x43\x6b\x74\xd6\x79\xa9\xef\x35\x51\x07\x5e\x35\xc2\x79\xf0\x26\xcb\xc5\xdf\x1b\xf1\x95\xbb\xf3\x08\x66\x9b\x62\x14\x16\x35\xf7\x81\x53\x21\xd0\x2b\xbc\xbe\x49\xa3\xc1\xcc\xdb\x40\xd3\x41\x82\x14\xc7\xfc\xb6\x19\xfb\xe6\xb3\xeb\xbd\xdc\xf8\x14\xa3\x44\x5b\x4a\xf4\x90\xc8\x75\x8e\x20\x3a\xb1\x44\x0e\x32\x9f\x25\x1a\x9d\xc8\x5c\xa9\x7f\x05\xcd\xc9\x53\x27\x25\xfc\xba\xbb\x9d\x8c\x46\x28\x83\x0f\x5d\x73\x07\x9b\x8b\x6d\x1b\xb2\x8b\x3d\x63\x55\x05\x82\xf6\x9a\xd5\x9d\xe8\x2a\x89\xd4\xe9\xe1\x28\x72\x0f\xf6\xa1\x83\x5a\x34\x8a\x9e\xb3\x3a\x5e\x9f\xa9\xf4\x5a\x62\x1f\x53\x83\x01\x5d\x69\x9a\x93\xc9\x43\xa1\x85\xd5\x60\xb8\xf1\x7f\xac\xb2\xf8\xc1\xf0\xb3\x56\x43\xa2\xe8\xe7\xdc\xf5\x4e\xbe\xc6\x48\x5f\x7b\xdf\x77\xd5\xc4\x61\x52\x94\xcf\x15\xa0\x14\x9d\xd3\x86\x57\xd4\xbb\x39\x77\xd8\x2a\xd1\x86\x0b\xd1\x0c\xcb\xd5\xff\xcb\x87\x5b\x70\xe5\xe4\x27\x3e\x4e\x83\xf8\x5f\xbf\x07\x00\x00\xff\xff\x7f\xa8\x0d\x6d\x1d\x06\x00\x00")

func imageTypesJsonBytes() ([]byte, error) {
	return bindataRead(
		_imageTypesJson,
		"image-types.json",
	)
}

func imageTypesJson() (*asset, error) {
	bytes, err := imageTypesJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "image-types.json", size: 1565, mode: os.FileMode(420), modTime: time.Unix(1569497831, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rulesTypesJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\xcd\x6e\xdb\x30\x0c\xbe\xf7\x29\x04\xb5\xc7\x26\x5e\x4f\x03\x72\xdd\x50\x60\xa7\x14\x43\xb0\xcb\x90\x83\x1a\xd3\x89\x0a\x59\xf2\x24\x7a\x80\x31\xe4\xdd\x07\xff\xd6\xb2\x65\x47\x19\x96\xae\x6b\xc5\x43\x80\x90\x9f\x48\x9a\x3f\x82\xbe\x5f\x57\x84\x10\x42\x6f\xcc\xee\x00\x29\xa3\x2b\x42\x0f\x88\xd9\x2a\x8a\x9e\x8c\x92\x8b\x5a\xbb\x54\x7a\x1f\xc5\x9a\x25\xb8\xf8\xf0\x31\xaa\x75\xd7\xf4\xb6\x39\xc9\xe3\xf6\x94\x59\x45\x8d\xd5\x2c\x99\xc6\x24\x17\xa2\x58\x0a\x25\x63\x25\xa3\x9f\x77\x91\xce\x05\x98\x05\x16\x19\x98\x65\xe9\xbd\xf5\x10\x43\xc2\x25\x47\xae\xa4\xa1\x2b\x52\x27\x54\x19\x54\x06\x92\xcb\xfd\x5a\x7f\x12\xca\x70\xb9\xff\x9a\x0b\xd8\x14\x19\x58\xa8\x0a\x89\xb5\x96\x1a\xd4\x5c\xee\x1b\xc7\x9d\x15\x64\x9e\xd2\x15\xf9\x6e\x69\x2b\xcb\x67\x56\x0c\xc0\x8d\x1a\xc1\xa5\x7f\xd0\x60\x00\xa9\x65\xd8\x76\xff\x8e\xb7\xa3\xd4\xcb\x8c\xcd\x74\xba\x4c\xeb\x51\x02\x94\x23\xa4\xe3\x33\xf5\x39\x8e\xa2\x3a\xb8\xae\xdd\x93\xd2\xbf\x2b\xd1\x36\x80\x7a\x7c\x82\x1d\xba\x10\x99\x56\x19\x68\xe4\x8e\xf4\x86\x5e\xdc\x56\x3b\xa1\x32\x11\x52\xf5\x66\x1c\xab\x43\x33\x21\xd6\x89\xb3\x11\x7d\x99\x0e\xd7\x39\xba\xd1\x50\xfa\xa1\xd7\x51\x6f\x76\xa2\xc9\x71\x99\x75\x78\x9c\xb4\x6e\x9d\x96\xa3\xfb\x03\x69\xcc\x10\xee\x95\x76\xce\xa7\x05\xec\x6a\x56\x4e\x19\xf9\xc6\x44\x0e\x24\x51\x9a\x3c\x97\xf0\xac\xb8\xc8\x53\xb8\xd7\x2a\xf5\x0c\xba\xe1\x29\x90\x0a\xff\x92\x8d\x7a\x64\x86\xef\x7a\xab\x6f\x37\xae\xfc\x84\x97\x69\x52\x19\x69\xa3\xce\x29\xd5\x46\xbd\xed\x42\x8d\xb4\x8e\xd2\x9d\xf8\xcc\x99\x5a\xf2\x64\xb6\xd6\xc4\xf3\x26\xb2\xf0\x27\x6f\x25\x0b\xbd\x53\xd2\x60\xbd\x6d\xc5\x7c\xe9\xc8\x6c\xf9\xe6\xad\x13\xf3\x56\x65\x80\x07\x90\x7f\xbf\x0a\xbe\xd7\x8d\x75\xc8\x6f\x5c\xfb\xe2\xe7\xb8\x0b\xe0\x37\xc6\xb1\x4f\x2b\x5a\x99\x6f\x49\x2b\xee\xe9\xf6\xf7\x33\xd3\xda\x73\x2e\x98\xff\x65\x15\xf0\xc4\x35\x42\xc2\x2e\x8c\xe5\x42\xbb\xe0\xd3\x8b\x56\xc2\x32\x4c\xe3\xff\x70\x19\x5c\x6f\x7a\x97\x84\x75\x18\xc8\xc5\xd6\xc1\xb7\x23\xad\xbc\xd2\xa5\x18\x69\xb7\x8e\x97\x95\x86\x1f\x39\xd7\x10\x4f\x56\xbe\x1e\x6b\x0f\xce\x71\x8a\x1e\xcc\xbf\x88\xbd\x92\x65\x71\x5c\xb5\x89\x89\x87\xfe\x48\x26\x4c\x18\xb0\xd0\x83\x99\xa7\x29\x97\x5f\x1a\x56\x7b\xe7\xa4\xcb\xbb\x67\xc6\x76\x09\xba\x5c\x12\xc2\x5c\x43\xa0\xcb\x81\x2e\x07\xba\xec\xc2\x07\xba\x3c\x94\x40\x97\x03\x5d\x7e\x35\x6f\xa2\x40\x97\x9d\x98\x40\x97\xc9\xfb\xdb\x85\x40\x97\xdd\x98\x40\x97\x1b\xd4\x7b\x5b\x87\x40\x97\xfb\x08\x5f\xba\xfc\x2f\x08\xef\x55\xfd\x7b\xfc\x1d\x00\x00\xff\xff\x8e\x2a\x41\x46\x74\x1f\x00\x00")

func rulesTypesJsonBytes() ([]byte, error) {
	return bindataRead(
		_rulesTypesJson,
		"rules-types.json",
	)
}

func rulesTypesJson() (*asset, error) {
	bytes, err := rulesTypesJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rules-types.json", size: 8052, mode: os.FileMode(420), modTime: time.Unix(1569497831, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _venueStatusJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x52\x31\x4f\xf3\x30\x10\xdd\xfb\x2b\x2c\xf7\x1b\xbf\xc4\x30\x21\x65\xa5\x0c\x9d\x18\x90\x58\x10\x83\x1b\x5f\x5a\x57\xae\x1d\xee\x2e\x91\xaa\xaa\xff\x1d\x39\x4e\x5a\xa5\x81\x56\x30\x90\x29\x7e\x3e\xbf\x7b\xef\xdd\x1d\x66\x42\x08\x21\xff\x51\xb9\x81\x9d\x96\x85\x90\x1b\xe6\xba\x50\x6a\x4b\xc1\x67\x09\xcd\x03\xae\x95\x41\x5d\x71\x76\xf7\xa0\x12\x36\x97\xff\xfb\x97\xd6\x0c\xaf\xa8\x50\xfd\x2d\xe5\x1a\xb9\x6a\x9c\xdb\xe7\x2e\x78\x13\xbc\x6a\xef\x55\x0b\xbe\x81\x8c\x58\x73\x43\x79\xa4\x1f\x28\x78\x5f\x43\xe4\x08\xab\x2d\x94\x3c\xa0\x35\x86\x1a\x90\x2d\x90\x2c\x44\x92\xd9\xe1\x5d\xbf\xf3\x39\x31\x58\x76\x1d\xc5\x6b\xec\x21\x96\x8b\x9e\xe4\x54\xa0\x9d\x7b\xae\x64\x21\xde\x46\x70\xfc\x0e\x13\x24\xd9\x42\x88\xf5\x72\xa5\xc9\x96\x59\x54\x98\x34\xcf\x95\x81\xca\x7a\xcb\x36\x78\x52\xb5\xe6\xcd\x0b\xac\x77\xe0\x59\x4e\x78\x8e\x23\xe4\xfd\x74\x3a\x9e\xb5\xc9\x16\x90\x6c\xf0\x57\x1d\xa5\x8a\xbf\x31\x34\xe8\xf9\x95\x99\xb2\x41\x04\xcf\xdd\x0c\x9e\x5a\xf0\xbc\x34\x74\xc5\xd9\x63\x2a\x17\x69\x66\xdd\x03\xb1\x5c\xd0\xa5\xd3\x61\x3b\x34\xa2\xde\x5f\x5e\x5a\x86\xdd\xb4\xc7\x8d\x84\xbe\x4f\xe9\x07\x49\x5d\x1d\xfd\x34\xb1\x71\x6a\xe3\xfb\xf4\xd7\x27\x29\x11\x3e\x1a\x8b\x60\x46\xd2\xe3\xd6\x7f\xb1\x36\xb7\xc2\x9f\xa5\xb6\xc7\xcf\x00\x00\x00\xff\xff\x60\x11\xe1\x2e\xe6\x03\x00\x00")

func venueStatusJsonBytes() ([]byte, error) {
	return bindataRead(
		_venueStatusJson,
		"venue-status.json",
	)
}

func venueStatusJson() (*asset, error) {
	bytes, err := venueStatusJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "venue-status.json", size: 998, mode: os.FileMode(420), modTime: time.Unix(1569497831, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _venueJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x98\xc1\x4e\xe4\x38\x10\x86\xef\x3c\x85\x65\xf6\xb8\xdd\xa1\x4f\x0b\xb9\xb1\xc0\x0a\x24\x24\x5a\xc0\x0e\x87\x11\x07\x77\x5c\x9d\x98\x71\xec\x8c\x5d\x61\x06\x21\xde\x7d\x94\x38\x09\x1d\x92\x18\xc6\x42\x91\x86\x13\xb1\xff\xb2\xff\xaf\x62\x57\xec\x7e\xde\x23\x84\x10\xfa\x97\x4d\x32\xc8\x19\x8d\x09\xcd\x10\x8b\x38\x8a\x1e\xac\x56\x0b\xd7\xba\xd4\x26\x8d\xb8\x61\x5b\x5c\x1c\xfc\x13\xb9\xb6\x7d\xfa\x77\x13\x29\x78\x1b\x65\xe3\xa8\xe9\xb5\x4b\x66\x70\x5b\x4a\xf9\xb4\x94\x5a\x71\xad\xa2\xc7\x55\xf4\x08\xaa\x84\x65\x35\x6e\x1b\x8b\x4f\x05\x54\xc1\x7a\xf3\x00\x09\xb6\xad\x85\xd1\x05\x18\x14\x60\x69\x4c\x9c\xbf\xba\xbd\x9e\xe8\xf5\xd9\x8d\x20\x50\xd6\x43\x7c\xa9\x06\x27\x17\xa7\xcd\x20\x9d\x80\x49\x79\xb5\xa5\x31\xf9\xda\x6b\xae\xfe\x9e\x07\x2d\x8e\xc7\x40\xa5\xa7\x1b\x66\x45\xb2\xa8\x1c\xda\xda\xf3\x7e\xc4\x61\x2b\x94\x40\xa1\x95\x8d\x0a\x86\xd9\x0d\xa4\x39\x28\xa4\x83\x71\x5e\x7a\x2d\xf7\xdd\xd3\xcb\xab\x37\xfa\x08\xc6\x0a\xad\xbc\x44\x4e\x31\x0f\x50\xeb\x27\x08\x06\x14\x0a\x7c\xba\x41\x86\xa5\xf5\x10\x9d\xd5\x32\xd2\xe8\xe6\xe1\xea\x59\x0b\x82\x6b\xed\x4f\x51\xdd\xd6\xff\xcc\x43\xe3\x26\x0d\xc2\x28\x8d\xf4\x40\xfc\x7f\x7d\x39\x13\x42\xe5\x23\x08\x80\x83\x4d\x8c\x28\xd0\xbf\x6b\x4e\x77\x54\x33\x95\x02\xa3\x6d\xe0\x3b\x61\x9c\x1b\xb0\xbe\x2d\x73\xdc\x28\xde\xa0\xb4\x85\xd3\xa2\x11\x2a\x7d\xdb\x9b\x0b\x75\x09\x2a\xc5\x8c\xc6\x64\x35\x3a\x71\xa1\x2d\x26\x9a\xfb\x96\xf5\xba\x95\xcc\xb4\x2c\xbe\x75\x13\x06\xa5\x52\x32\x14\x58\x7a\x89\x2e\x5b\xc9\x44\x32\x55\x99\x6f\xc0\x8c\x24\x53\xe4\x65\x4e\x63\xb2\x38\x3a\x78\xdb\xc7\x7e\x36\x7d\x47\x07\xe3\xae\xb4\x4a\xdf\xb5\xd5\x69\x42\x7d\xad\x0e\xa7\x8d\xad\x0e\xc7\x9d\x41\xce\x84\xaf\x20\x9c\xd5\xfd\xbf\xb5\xec\xb6\xda\xe4\x0c\xab\x7e\x37\xf8\x78\x35\x05\x09\x45\xa6\x95\xb7\xa2\x76\x9a\x4f\x5e\xf6\x3f\x32\x00\x99\x64\x4c\x98\xe3\x24\xf1\x6f\xbc\xbb\x4e\x4a\x9c\x96\xdc\x56\x93\xcf\xb3\x19\x06\x3e\xc3\x0a\xa6\xb0\x6c\x23\x81\xff\xcb\x30\x33\x5a\xe7\xbe\xaa\xd9\x48\x49\xab\x9d\x93\x76\xe0\x33\x88\x36\x03\x56\x2d\x8a\xff\x58\x22\xa4\x18\x1c\x1e\xfb\xb8\xe7\x4e\x4b\x5e\xc5\x73\xf2\x0e\x9d\x86\x01\x33\xbb\x06\x93\x33\x05\x0a\x4f\xb4\x94\x90\xbc\xf3\x69\x3c\x67\x96\x74\x11\x64\x27\x64\x62\x97\x6d\xb4\x96\xc0\xd4\xf8\x3e\xd6\x05\x28\xa1\xd2\xeb\x52\x7a\x33\x7d\xe5\x64\xc4\xe9\x3e\x2b\xbf\xa6\x1a\x6d\x32\xbf\x3d\x6b\x41\xa9\x4d\xa4\xb6\x1f\x80\x3b\x71\xb2\x59\xe1\x7a\xd6\x82\xe0\x44\xce\x52\x2f\xd6\x85\x13\x7c\x16\x4f\x3d\xdf\x24\x4f\xe3\x26\xec\x35\x95\xc6\x80\xc2\x3b\x86\x49\x06\xfc\x44\x2b\xac\xae\x63\x9e\xf7\xe5\xf4\xa4\x09\x20\x6d\xc4\x4c\x45\xbd\x6f\x33\x88\xb8\x28\x37\x52\xd8\x0c\xf8\x87\x99\xd7\x6d\xc4\x9f\x46\xbd\xb7\xc3\x4e\x0d\x7c\x2f\x85\x01\xde\xf3\x47\x05\xa7\x23\x37\xea\xa9\x7b\xe9\xe0\x4a\x37\x72\x10\x1f\x3b\x22\x8f\x1d\x32\x47\x8f\x78\xbe\x83\x86\xef\xb3\xec\xfd\x88\xbd\x5f\xf0\x6b\xc1\x7d\x93\x28\xc6\x79\x9d\x78\x26\xd7\xbb\xbf\xa2\x6c\x99\xb4\xb0\xf7\xf2\x2b\x00\x00\xff\xff\x76\xae\x64\xd3\xed\x11\x00\x00")

func venueJsonBytes() ([]byte, error) {
	return bindataRead(
		_venueJson,
		"venue.json",
	)
}

func venueJson() (*asset, error) {
	bytes, err := venueJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "venue.json", size: 4589, mode: os.FileMode(420), modTime: time.Unix(1569497831, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"basic-types.json":       basicTypesJson,
	"event.json":             eventJson,
	"feed-entity-watch.json": feedEntityWatchJson,
	"feed-entity.json":       feedEntityJson,
	"feed-event.json":        feedEventJson,
	"image-types.json":       imageTypesJson,
	"rules-types.json":       rulesTypesJson,
	"venue-status.json":      venueStatusJson,
	"venue.json":             venueJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"basic-types.json":       &bintree{basicTypesJson, map[string]*bintree{}},
	"event.json":             &bintree{eventJson, map[string]*bintree{}},
	"feed-entity-watch.json": &bintree{feedEntityWatchJson, map[string]*bintree{}},
	"feed-entity.json":       &bintree{feedEntityJson, map[string]*bintree{}},
	"feed-event.json":        &bintree{feedEventJson, map[string]*bintree{}},
	"image-types.json":       &bintree{imageTypesJson, map[string]*bintree{}},
	"rules-types.json":       &bintree{rulesTypesJson, map[string]*bintree{}},
	"venue-status.json":      &bintree{venueStatusJson, map[string]*bintree{}},
	"venue.json":             &bintree{venueJson, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
